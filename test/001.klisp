; list functions

(def x-list (range 0 30 3))
(def square
     (fn (n) (* n n)))

; join, append list
(print (append x-list 1000))
(print (join (range 1 6 1) x-list))

; map list
(print (map x-list square))
(print (map x-list
            (fn (n) (/ n 3))))

; reduction
(print (reduce x-list + 0))
(print (reduce (cdr x-list) * 1))

; index operations
(do
  (def fifteen (nth x-list 5))
  (def ten
       (when (matches-at? x-list 24 8) 10))
  (def six (index x-list 18))
  (def three
       (when (contains? x-list 27) 33))
  (def total (sum (list fifteen ten six three)))
  (print 'total = 64:' total))

; for-each
(each x-list print)

